{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ashish-project\\\\speech-to-text-whisper\\\\voice-recorder-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecorder = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        sendAudioToAPI(audioBlob);\n        audioChunksRef.current = [];\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const sendAudioToAPI = async audioBlob => {\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'recording.wav');\n    try {\n      const response = await axios.post('/api/transcribe', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscription(response.data.text);\n    } catch (error) {\n      console.error('Error transcribing audio:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Voice Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        disabled: isRecording,\n        className: `px-4 py-2 rounded ${isRecording ? 'bg-gray-400' : 'bg-green-500 text-white'}`,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        disabled: !isRecording,\n        className: `px-4 py-2 rounded ${!isRecording ? 'bg-gray-400' : 'bg-red-500 text-white'}`,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), transcription && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-3 bg-gray-100 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold\",\n        children: \"Transcription:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecorder, \"gRIkjyPP+Y7ovB6DIafttSb3o34=\");\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","VoiceRecorder","_s","isRecording","setIsRecording","transcription","setTranscription","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","sendAudioToAPI","start","error","console","stopRecording","stop","formData","FormData","append","response","post","headers","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Ashish-project/speech-to-text-whisper/voice-recorder-app/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\n\nconst VoiceRecorder = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      \n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n      \n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        sendAudioToAPI(audioBlob);\n        audioChunksRef.current = [];\n      };\n      \n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  const sendAudioToAPI = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'recording.wav');\n\n    try {\n      const response = await axios.post('/api/transcribe', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n\n      setTranscription(response.data.text);\n    } catch (error) {\n      console.error('Error transcribing audio:', error);\n    }\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto\">\n      <h2 className=\"text-xl font-bold mb-4\">Voice Recorder</h2>\n      <div className=\"flex space-x-4\">\n        <button \n          onClick={startRecording} \n          disabled={isRecording}\n          className={`px-4 py-2 rounded ${\n            isRecording ? 'bg-gray-400' : 'bg-green-500 text-white'\n          }`}\n        >\n          Start Recording\n        </button>\n        <button \n          onClick={stopRecording} \n          disabled={!isRecording}\n          className={`px-4 py-2 rounded ${\n            !isRecording ? 'bg-gray-400' : 'bg-red-500 text-white'\n          }`}\n        >\n          Stop Recording\n        </button>\n      </div>\n      {transcription && (\n        <div className=\"mt-4 p-3 bg-gray-100 rounded\">\n          <h3 className=\"font-semibold\">Transcription:</h3>\n          <p>{transcription}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VoiceRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}